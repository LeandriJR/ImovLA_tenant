// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Tenant.Infrastructure;

#nullable disable

namespace Tenant.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250304231642_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Tenant.Model.EmpresaEntity", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CNPJ")
                        .HasColumnType("text");

                    b.Property<Guid?>("EnderecoId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("InsertUser")
                        .HasColumnType("uuid");

                    b.Property<string>("NomeFantasia")
                        .HasColumnType("text");

                    b.Property<string>("RazaoSocial")
                        .HasColumnType("text");

                    b.Property<bool?>("Status")
                        .HasColumnType("boolean");

                    b.Property<string>("Telefone")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("UpdateUser")
                        .HasColumnType("uuid");

                    b.HasKey("ID");

                    b.HasIndex("EnderecoId");

                    b.ToTable("empresa", (string)null);
                });

            modelBuilder.Entity("Tenant.Model.EnderecoEntity", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Bairro")
                        .HasColumnType("text");

                    b.Property<int?>("CEP")
                        .HasColumnType("integer");

                    b.Property<string>("Complemento")
                        .HasColumnType("text");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("InsertUser")
                        .HasColumnType("uuid");

                    b.Property<string>("Logradouro")
                        .HasColumnType("text");

                    b.Property<Guid?>("MunicipioId")
                        .HasColumnType("uuid");

                    b.Property<int?>("Numero")
                        .HasColumnType("integer");

                    b.Property<bool?>("Status")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("UpdateUser")
                        .HasColumnType("uuid");

                    b.HasKey("ID");

                    b.HasIndex("MunicipioId");

                    b.ToTable("endereco", (string)null);
                });

            modelBuilder.Entity("Tenant.Model.ModuloEntity", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Descricao")
                        .HasColumnType("text");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("InsertUser")
                        .HasColumnType("uuid");

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.Property<bool?>("Status")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("UpdateUser")
                        .HasColumnType("uuid");

                    b.Property<decimal?>("ValorSoma")
                        .HasColumnType("numeric");

                    b.HasKey("ID");

                    b.ToTable("modulo", (string)null);
                });

            modelBuilder.Entity("Tenant.Model.MunicipioEntity", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("InsertUser")
                        .HasColumnType("uuid");

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.Property<bool?>("Status")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("UFId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("UpdateUser")
                        .HasColumnType("uuid");

                    b.HasKey("ID");

                    b.HasIndex("UFId");

                    b.ToTable("municipio", (string)null);
                });

            modelBuilder.Entity("Tenant.Model.PermissaoEntity", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Descricao")
                        .HasColumnType("text");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("InsertUser")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModuloId")
                        .HasColumnType("uuid");

                    b.Property<string>("NomePermissao")
                        .HasColumnType("text");

                    b.Property<bool?>("Status")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("UpdateUser")
                        .HasColumnType("uuid");

                    b.HasKey("ID");

                    b.HasIndex("ModuloId");

                    b.ToTable("permissao", (string)null);
                });

            modelBuilder.Entity("Tenant.Model.PlanoEntity", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Descricao")
                        .HasColumnType("text");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("InsertUser")
                        .HasColumnType("uuid");

                    b.Property<int?>("LimiteImoveis")
                        .HasColumnType("integer");

                    b.Property<int?>("LimiteUsuarios")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.Property<bool?>("Status")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("UpdateUser")
                        .HasColumnType("uuid");

                    b.Property<decimal?>("Valor")
                        .HasColumnType("numeric");

                    b.HasKey("ID");

                    b.ToTable("plano", (string)null);
                });

            modelBuilder.Entity("Tenant.Model.PlanoModuloEntity", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("InsertUser")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModuloId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("PlanoId")
                        .HasColumnType("uuid");

                    b.Property<bool?>("Status")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("UpdateUser")
                        .HasColumnType("uuid");

                    b.HasKey("ID");

                    b.HasIndex("ModuloId");

                    b.HasIndex("PlanoId");

                    b.ToTable("plano_modulo", (string)null);
                });

            modelBuilder.Entity("Tenant.Model.TenantEntity", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DataPlano")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("InsertUser")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("PlanoId")
                        .HasColumnType("uuid");

                    b.Property<string>("SchemaName")
                        .HasColumnType("text");

                    b.Property<bool?>("Status")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("UpdateUser")
                        .HasColumnType("uuid");

                    b.HasKey("ID");

                    b.HasIndex("PlanoId");

                    b.ToTable("tenant", (string)null);
                });

            modelBuilder.Entity("Tenant.Model.TenantLogEntity", b =>
                {
                    b.Property<Guid>("TenantLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("InsertUser")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("PlanoId")
                        .HasColumnType("uuid");

                    b.Property<string>("PlanoRenovacao")
                        .HasColumnType("text");

                    b.Property<string>("SchemaName")
                        .HasColumnType("text");

                    b.Property<bool?>("Status")
                        .HasColumnType("boolean");

                    b.Property<string>("TenantId")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("UpdateUser")
                        .HasColumnType("uuid");

                    b.HasKey("TenantLogId");

                    b.HasIndex("TenantId");

                    b.ToTable("tenant_log", (string)null);
                });

            modelBuilder.Entity("Tenant.Model.UfEntity", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("InsertUser")
                        .HasColumnType("uuid");

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.Property<string>("Regiao")
                        .HasColumnType("text");

                    b.Property<bool?>("Status")
                        .HasColumnType("boolean");

                    b.Property<string>("UFCode")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("UpdateUser")
                        .HasColumnType("uuid");

                    b.HasKey("ID");

                    b.ToTable("uf", (string)null);
                });

            modelBuilder.Entity("Tenant.Model.EmpresaEntity", b =>
                {
                    b.HasOne("Tenant.Model.EnderecoEntity", "Endereco")
                        .WithMany()
                        .HasForeignKey("EnderecoId");

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("Tenant.Model.EnderecoEntity", b =>
                {
                    b.HasOne("Tenant.Model.MunicipioEntity", "Municipio")
                        .WithMany()
                        .HasForeignKey("MunicipioId");

                    b.Navigation("Municipio");
                });

            modelBuilder.Entity("Tenant.Model.MunicipioEntity", b =>
                {
                    b.HasOne("Tenant.Model.UfEntity", "UF")
                        .WithMany()
                        .HasForeignKey("UFId");

                    b.Navigation("UF");
                });

            modelBuilder.Entity("Tenant.Model.PermissaoEntity", b =>
                {
                    b.HasOne("Tenant.Model.ModuloEntity", "Modulo")
                        .WithMany()
                        .HasForeignKey("ModuloId");

                    b.Navigation("Modulo");
                });

            modelBuilder.Entity("Tenant.Model.PlanoModuloEntity", b =>
                {
                    b.HasOne("Tenant.Model.ModuloEntity", "Modulo")
                        .WithMany()
                        .HasForeignKey("ModuloId");

                    b.HasOne("Tenant.Model.PlanoEntity", "Plano")
                        .WithMany()
                        .HasForeignKey("PlanoId");

                    b.Navigation("Modulo");

                    b.Navigation("Plano");
                });

            modelBuilder.Entity("Tenant.Model.TenantEntity", b =>
                {
                    b.HasOne("Tenant.Model.PlanoEntity", "Plano")
                        .WithMany()
                        .HasForeignKey("PlanoId");

                    b.Navigation("Plano");
                });

            modelBuilder.Entity("Tenant.Model.TenantLogEntity", b =>
                {
                    b.HasOne("Tenant.Model.TenantEntity", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId");

                    b.Navigation("Tenant");
                });
#pragma warning restore 612, 618
        }
    }
}
